# This is a basic workflow to help you get started with Actions

name: learn_devops

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  gitPytest:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # pep8
      - name: PEP8 Formating
        id: autoyapf
        uses: mritunjaysharma394/autoyapf@v2
        with:
          args: --style pep8 --recursive --in-place .
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Ramesh Kumar'
          git config --global user.email 'rameshjes@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated formating of code using PEP8 standards"
          git push

      # flake8
      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1

      # lint with flak8
      - name: Link with flake8
        run: |
          # pip install flake8
          # stop the build if there are python errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit zero treats all errors as warning. The Github editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # Runs all the test cases in the project
      - name: GitHub Action for pytest
        run: |
          pytest
        # uses: cclauss/GitHub-Action-for-pytest@master
        # with:
          # args: pytest

      # Format the code according to Pep8
      # - name: autopep8
      #   id: autopep8
      #   uses: peter-evans/autopep8@v1
      #   with:
      #     args: --recursive --in-place --aggressive --aggressive .
      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
